//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DeluxeOM.Repository
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DeluxeOrderManagementEntities : DbContext
    {
        public DeluxeOrderManagementEntities()
            : base("name=DeluxeOrderManagementEntities")
        {
            var adapter = (IObjectContextAdapter)this;
            var objectContext = adapter.ObjectContext;
            objectContext.CommandTimeout = 0;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdditionalProperty> AdditionalProperties { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<Lookup> Lookups { get; set; }
        public virtual DbSet<LookupType> LookupTypes { get; set; }
        public virtual DbSet<PasswordResetModel> PasswordResetModels { get; set; }
        public virtual DbSet<PrivilegeModelModel> PrivilegeModelModels { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<RoleModel> RoleModels { get; set; }
        public virtual DbSet<RolePrivModel> RolePrivModels { get; set; }
        public virtual DbSet<Territory> Territories { get; set; }
        public virtual DbSet<TerritoryLanguageModel> TerritoryLanguageModels { get; set; }
        public virtual DbSet<UserPasswordModel> UserPasswordModels { get; set; }
        public virtual DbSet<UserRoleModel> UserRoleModels { get; set; }
        public virtual DbSet<UserModel> UserModels { get; set; }
        public virtual DbSet<Jobs_Announcements_Inserted> Jobs_Announcements_Inserted { get; set; }
        public virtual DbSet<SalesChannel> SalesChannels { get; set; }
        public virtual DbSet<Job_Annoncement_History> Job_Annoncement_History { get; set; }
        public virtual DbSet<PipelineOrder> PipelineOrders { get; set; }
        public virtual DbSet<PriceReport> PriceReports { get; set; }
        public virtual DbSet<Announcement> Announcements { get; set; }
        public virtual DbSet<Announceemnt_Channel_Format> Announceemnt_Channel_Format { get; set; }
        public virtual DbSet<AnnouncementGrid> AnnouncementGrids { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<QCReport> QCReports { get; set; }
        public virtual DbSet<Jobs_Items> Jobs_Items { get; set; }
        public virtual DbSet<NotificationEntity> NotificationEntities { get; set; }
        public virtual DbSet<OrderGrid> OrderGrids { get; set; }
        public virtual DbSet<FTPConfig> FTPConfigs { get; set; }
        public virtual DbSet<VID> VIDs { get; set; }
        public virtual DbSet<JOB> JOBS { get; set; }
    
        public virtual int usp_ExportAppleGrid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ExportAppleGrid");
        }
    
        public virtual int usp_Insert_PriceReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Insert_PriceReport");
        }
    
        public virtual int usp_Insert_QCReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Insert_QCReport");
        }
    
        public virtual int usp_Insert_PipelineOrder()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Insert_PipelineOrder");
        }
    
        public virtual int usp_Insert_AppleGrid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Insert_AppleGrid");
        }
    
        public virtual int usp_UPD_AnnouncementGrid(Nullable<int> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UPD_AnnouncementGrid", jobIdParameter);
        }
    
        public virtual int usp_Export_Title(string whereClause)
        {
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Export_Title", whereClauseParameter);
        }
    
        public virtual ObjectResult<usp_Search_Title_Result> usp_Search_Title(string whereClause)
        {
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Search_Title_Result>("usp_Search_Title", whereClauseParameter);
        }
    
        public virtual int usp_InsertDataToAnnouncementStaging(string path)
        {
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertDataToAnnouncementStaging", pathParameter);
        }
    
        public virtual int usp_InsertDataToApplePriceStaging(string path)
        {
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertDataToApplePriceStaging", pathParameter);
        }
    
        public virtual int usp_InsertDataToAppleQCStaging(string path)
        {
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertDataToAppleQCStaging", pathParameter);
        }
    
        public virtual int usp_InsertDataToPipeLineStaging(string path)
        {
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertDataToPipeLineStaging", pathParameter);
        }
    
        public virtual int usp_Insert_Announcements(Nullable<int> jobID, Nullable<System.DateTime> firstAnouncedDate)
        {
            var jobIDParameter = jobID.HasValue ?
                new ObjectParameter("JobID", jobID) :
                new ObjectParameter("JobID", typeof(int));
    
            var firstAnouncedDateParameter = firstAnouncedDate.HasValue ?
                new ObjectParameter("firstAnouncedDate", firstAnouncedDate) :
                new ObjectParameter("firstAnouncedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Insert_Announcements", jobIDParameter, firstAnouncedDateParameter);
        }
    
        public virtual int usp_Get_Titles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Get_Titles");
        }
    
        public virtual ObjectResult<usp_Get_Orders_Result> usp_Get_Orders(string whereClause, string channel)
        {
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Get_Orders_Result>("usp_Get_Orders", whereClauseParameter, channelParameter);
        }
    
        public virtual int usp_UpdateOG_Status(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateOG_Status", orderIdParameter);
        }
    }
}
